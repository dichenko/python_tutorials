# Todo
# –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
# –î–æ–ø–∏—Å–∞—Ç—å –∏–≥—Ä–æ–≤—É—é –ª–æ–≥–∏–∫—É
# –°–¥–µ–ª–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
# –°–¥–µ–ª–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
# –û–±—Ä–∞–±–æ—Ç–∞—Ç—å "–ù–µ —Ö–æ—á—É"
# –°–¥–µ–ª–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä (–í—Å–µ–≥–æ, –≤—ã–∏–≥—Ä–∞–ª, –ø—Ä–æ–∏–≥—Ä–∞–ª, –Ω–∏—á—å—è, –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö)

from aiogram import Bot, Dispatcher, F
from aiogram.types import Message

import random
from dotenv import load_dotenv  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ python-dotenv
import os

# –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª .env –∏ –∑–∞–ø–∏—Å—Ç–∞—å —Ç—É–¥–∞ —Å–≤–æ–π BOT_TOKEN
load_dotenv()

# –¢–µ–ø–µ—Ä—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –±—É–¥—É—Ç –∂–∏—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ
from keyboards import yes_no_keyboard, game_kb

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(os.getenv('BOT_TOKEN'))
dp = Dispatcher()


@dp.message(F.text == '/start')
async def start_command(message: Message):
    await message.answer(
        '–≠—Ç–æ –∏–≥—Ä–∞ –ö–ù–ë. –ò–≥—Ä–∞–µ–º?', reply_markup=yes_no_keyboard)


@dp.message(F.text == '–î–∞–≤–∞–π!')
async def game(message: Message):
    await message.answer(
        '–¢–≤–æ–π —Ö–æ–¥!', reply_markup=game_kb)


@dp.message(F.text.in_(["–ö–∞–º–µ–Ω—å üóø", '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ', '–ë—É–º–∞–≥–∞ üìú']))
async def game(message: Message):
    mas = ["–ö–∞–º–µ–Ω—å üóø", '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇÔ∏è', '–ë—É–º–∞–≥–∞ üìú']
    bot_choise = random.choice(mas)
    print(message.text)
    await message.answer(f'–¢—ã –∑–∞–≥–∞–¥–∞–ª {message.text}, –∞ —è –∑–∞–≥–∞–¥–∞–ª {bot_choise}')
    await message.answer(f'–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é, –∫—Ç–æ –≤—ã–∏–≥—Ä–∞–ª. –ú–æ–π –ø—Ä–æ–≥—Ä–∞–º–∏—Å—Ç –º–µ–Ω—è –Ω–µ –¥–æ–¥–µ–ª–∞–ª, –ø—Ä–æ—Å—Ç–∏.')
    await message.answer(f'–•–æ—á–µ—à—å –µ—â–µ —Ä–∞–∑ —Å—ã–≥—Ä–∞—Ç—å?',
                         reply_markup=yes_no_keyboard)


@dp.message()
async def default(message: Message):
    print(message.text)



if __name__ == '__main__':
    dp.run_polling(bot)


